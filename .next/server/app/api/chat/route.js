"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/route";
exports.ids = ["app/api/chat/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fraviporuri%2Fraviporuri-website%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fraviporuri%2Fraviporuri-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fraviporuri%2Fraviporuri-website%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fraviporuri%2Fraviporuri-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_raviporuri_raviporuri_website_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/chat/route.ts */ \"(rsc)/./app/api/chat/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/route\",\n        pathname: \"/api/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/route\"\n    },\n    resolvedPagePath: \"/Users/raviporuri/raviporuri-website/app/api/chat/route.ts\",\n    nextConfigOutput,\n    userland: _Users_raviporuri_raviporuri_website_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/chat/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2hhdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnJhdmlwb3J1cmklMkZyYXZpcG9ydXJpLXdlYnNpdGUlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGcmF2aXBvcnVyaSUyRnJhdmlwb3J1cmktd2Vic2l0ZSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDVTtBQUN2RjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3JhdmktYWktY2FyZWVyLXBsYXRmb3JtLz8yMjUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9yYXZpcG9ydXJpL3Jhdmlwb3J1cmktd2Vic2l0ZS9hcHAvYXBpL2NoYXQvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NoYXQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jaGF0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3Jhdmlwb3J1cmkvcmF2aXBvcnVyaS13ZWJzaXRlL2FwcC9hcGkvY2hhdC9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY2hhdC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fraviporuri%2Fraviporuri-website%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fraviporuri%2Fraviporuri-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/chat/route.ts":
/*!*******************************!*\
  !*** ./app/api/chat/route.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @anthropic-ai/sdk */ \"(rsc)/./node_modules/@anthropic-ai/sdk/index.mjs\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_4__.createClient)(\"https://jsikfckosgyhgmsscbcl.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY);\n// Load the prompt bundle - using public directory for serverless reliability\nlet promptBundle = null;\nconst loadPromptBundle = async ()=>{\n    if (promptBundle) return promptBundle;\n    try {\n        // In serverless environments, use HTTP fetch to get the bundle from public directory\n        const baseUrl = process.env.VERCEL_URL ? `https://${process.env.VERCEL_URL}` : process.env.NEXT_PUBLIC_VERCEL_URL ? `https://${process.env.NEXT_PUBLIC_VERCEL_URL}` : \"http://localhost:3000\";\n        console.log(\"Fetching prompt bundle from:\", `${baseUrl}/prompts/ravi_profile_ai_site.json`);\n        const response = await fetch(`${baseUrl}/prompts/ravi_profile_ai_site.json`);\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n        promptBundle = await response.json();\n        console.log(\"Prompt bundle loaded successfully via HTTP\");\n        return promptBundle;\n    } catch (httpError) {\n        console.log(\"HTTP fetch failed, trying file system:\", httpError.message);\n        // Fallback to file system approach\n        try {\n            const possiblePaths = [\n                path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), \"public\", \"prompts\", \"ravi_profile_ai_site.json\"),\n                path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), \"src\", \"prompts\", \"ravi_profile_ai_site.json\"),\n                path__WEBPACK_IMPORTED_MODULE_3___default().join(__dirname, \"..\", \"..\", \"..\", \"public\", \"prompts\", \"ravi_profile_ai_site.json\")\n            ];\n            for (const promptPath of possiblePaths){\n                try {\n                    if (fs__WEBPACK_IMPORTED_MODULE_2___default().existsSync(promptPath)) {\n                        console.log(\"Loading prompt bundle from file system:\", promptPath);\n                        promptBundle = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(promptPath, \"utf8\"));\n                        return promptBundle;\n                    }\n                } catch (pathError) {\n                    continue;\n                }\n            }\n            throw new Error(\"Prompt bundle file not found\");\n        } catch (error) {\n            console.error(\"Error loading prompt bundle:\", error);\n            return null;\n        }\n    }\n};\n// Get session context from database\nasync function getSessionContext(session_id) {\n    const { data: session, error: sErr } = await supabase.from(\"chat_sessions\").select(`\n      id,\n      created_at,\n      status,\n      visitors (\n        id, name, role, purpose, company, email\n      )\n    `).eq(\"id\", session_id).single();\n    if (sErr || !session) {\n        throw new Error(\"Session not found\");\n    }\n    const visitor = session.visitors;\n    return {\n        session,\n        visitor\n    };\n}\n// Check if this is a gated conversation (has session_id)\nfunction isGatedConversation(requestBody) {\n    return requestBody.session_id && typeof requestBody.session_id === \"string\";\n}\n// Create system prompt from bundle\nasync function createSystemPromptFromBundle(visitor) {\n    const bundle = await loadPromptBundle();\n    if (!bundle) {\n        return \"You are an AI assistant helping visitors learn about Ravi Poruri's professional background.\";\n    }\n    const systemMessages = bundle.system.content.join(\"\\n\\n\");\n    const developerMessages = bundle.developer.content.join(\"\\n\\n\");\n    if (visitor) {\n        // Post-gate: include visitor context\n        const rolePolicy = bundle.visitor_role_policies[visitor.role] || bundle.visitor_role_policies.default;\n        const ackGate = bundle.response_templates.ack_gate.replace(\"{{visitor_name}}\", visitor.name).replace(\"{{visitor_role}}\", visitor.role).replace(\"{{visitor_purpose}}\", visitor.purpose);\n        return `${systemMessages}\\n\\n${developerMessages}\\n\\nVISITOR CONTEXT:\\n${ackGate}\\n\\nRole-specific guidance: ${JSON.stringify(rolePolicy)}`;\n    } else {\n        // Pre-gate: enforce gatekeeping\n        return `${systemMessages}\\n\\n${developerMessages}\\n\\nIMPORTANT: You MUST use the gate prompt for any new conversation.`;\n    }\n}\n// Legacy fallback - kept for backward compatibility\nconst createSystemPrompt = (profileData)=>{\n    return createSystemPromptFromBundle();\n};\nasync function POST(request) {\n    try {\n        const requestBody = await request.json();\n        const { message, session_id } = requestBody;\n        if (!message) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Message is required\"\n            }, {\n                status: 400\n            });\n        }\n        if (!process.env.ANTHROPIC_API_KEY) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"API configuration missing\",\n                response: \"I apologize, but the AI chat service is currently not configured. Please contact Ravi directly at raviporuri@gmail.com for information about his background and experience.\"\n            }, {\n                status: 500\n            });\n        }\n        let visitor = null;\n        let sessionContext = null;\n        // Handle gated conversation\n        if (isGatedConversation(requestBody)) {\n            try {\n                sessionContext = await getSessionContext(session_id);\n                visitor = sessionContext.visitor;\n                // Save user message to database\n                await supabase.from(\"messages\").insert([\n                    {\n                        session_id,\n                        role: \"user\",\n                        content: message,\n                        metadata: {\n                            visitor_role: visitor.role,\n                            visitor_purpose: visitor.purpose,\n                            timestamp: new Date().toISOString()\n                        }\n                    }\n                ]);\n            } catch (error) {\n                console.error(\"Session context error:\", error);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Invalid or expired session\",\n                    response: \"Your session has expired. Please refresh and start a new conversation.\"\n                }, {\n                    status: 400\n                });\n            }\n        }\n        // For non-gated conversations, always return gate prompt on first interaction\n        const bundle = await loadPromptBundle();\n        if (!visitor && bundle) {\n            const gatePrompt = bundle.response_templates.gate_prompt;\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                response: gatePrompt\n            });\n        }\n        // Create appropriate system prompt\n        const systemPrompt = await createSystemPromptFromBundle(visitor);\n        // Call Anthropic API with session context\n        const messages = [\n            {\n                role: \"user\",\n                content: message\n            }\n        ];\n        // Create Anthropic client for this request\n        const anthropicClient = new _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n            apiKey: process.env.ANTHROPIC_API_KEY\n        });\n        const response = await anthropicClient.messages.create({\n            model: \"claude-3-haiku-20240307\",\n            max_tokens: 1000,\n            temperature: 0.4,\n            system: systemPrompt,\n            messages\n        });\n        const responseText = response.content[0].type === \"text\" ? response.content[0].text : \"I apologize, but I encountered an error processing your request.\";\n        // Save AI response to database if we have a session\n        if (session_id && visitor) {\n            await supabase.from(\"messages\").insert([\n                {\n                    session_id,\n                    role: \"assistant\",\n                    content: responseText,\n                    model: \"claude-3-haiku-20240307\",\n                    metadata: {\n                        usage: response.usage,\n                        visitor_role: visitor.role,\n                        visitor_purpose: visitor.purpose,\n                        timestamp: new Date().toISOString()\n                    }\n                }\n            ]);\n            // Update session activity\n            await supabase.from(\"chat_sessions\").update({\n                updated_at: new Date().toISOString()\n            }).eq(\"id\", session_id);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            response: responseText\n        });\n    } catch (error) {\n        console.error(\"Chat API error:\", error);\n        // Get visitor from outer scope for error handling\n        let visitor = null;\n        try {\n            const requestBody = await request.clone().json();\n            if (requestBody.session_id) {\n                const sessionContext = await getSessionContext(requestBody.session_id);\n                visitor = sessionContext.visitor;\n            }\n        } catch (e) {\n        // Ignore context errors in fallback\n        }\n        // Enhanced fallback with gate awareness\n        const bundle = await loadPromptBundle();\n        if (bundle && !visitor) {\n            const gatePrompt = bundle.response_templates.gate_prompt;\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                response: gatePrompt\n            });\n        }\n        // Comprehensive executive fallback response\n        const fallbackResponse = `I'm Ravi's AI assistant with comprehensive knowledge of his 25+ year executive journey. Let me share key insights about his leadership:\n\n**EXECUTIVE LEADERSHIP ACHIEVEMENTS:**\n• **Revenue Impact**: $3.2B+ in total revenue growth delivered across multiple organizations\n• **Team Leadership**: Built and led global organizations of 500+ people across 4 continents\n• **IPO Experience**: Led Dropbox from pre-IPO to successful public offering, doubling revenue from $850M to $1.8B\n• **Platform Scale**: Managed systems serving 600M+ users and processing 400B+ daily events\n\n**AI & PRODUCT INNOVATION (2024):**\n• **Scanity.ai**: First AI-native security platform using LLaMA and open-source models for vulnerability detection\n• **YAARS**: Advanced OCR using custom PaddleOCR CoreML models with 95%+ accuracy\n• **Production AI**: Building multiple AI applications with strict quality standards and real-world impact\n\n**STRATEGIC ACCOMPLISHMENTS:**\n• Grew Cisco CX Cloud from MVP to $500M+ ARR in 4 years as Senior Director\n• Led digital transformation initiatives across Fortune 500 companies\n• Multiple U.S. patents in data platform technologies\n• Proven track record scaling startups to enterprise (0 to IPO)\n\nTo continue our conversation with personalized insights based on your role and interests, please let me know your name, role (recruiter, executive, hiring manager, etc.), and what you're hoping to learn about Ravi.\n\nFor immediate assistance, contact Ravi at raviporuri@gmail.com.`;\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            response: fallbackResponse\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/chat/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@supabase","vendor-chunks/@anthropic-ai","vendor-chunks/next","vendor-chunks/whatwg-url","vendor-chunks/tr46","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fraviporuri%2Fraviporuri-website%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fraviporuri%2Fraviporuri-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();